"use client";
import { useState } from "react";
import Productcart from "@/components/common/ProductCard";

const courses = [
  {
    imagsrc: "/product1.png",
    titlebig: "ÿØŸàÿ±Ÿá ÿ¢ŸÖŸàÿ≤ÿ¥ SQL Server",
    titlesmol: "€åÿßÿØ⁄Ø€åÿ±€å ÿ¨ÿßŸÖÿπ SQL",
    titlename: "ÿπŸÑ€å ÿßÿ≠ŸÖÿØ€å",
    clock: "€≤€∞:€≥€∏:€π",
    pris: "€≥€∏€∞",
  },
  {
    imagsrc: "/product3.png",
    titlebig: "ÿØŸàÿ±Ÿá ÿ≠ÿ±ŸÅŸá‚Äåÿß€å React",
    titlesmol: "ÿ≥ÿßÿÆÿ™ Ÿæÿ±Ÿà⁄òŸá‚Äå ÿ®ÿß ÿ±€å‚Äåÿß⁄©ÿ™",
    titlename: "ŸÜ⁄Ø€åŸÜ ÿ±ÿ∂ÿß€å€å",
    clock: "€≤€∞:€≥€∏:€π",
    pris: "€≥€∏€∞",
  },
  {
    imagsrc: "/product2.png",
    titlebig: "ÿØŸàÿ±Ÿá Ÿæÿß€åÿ™ŸàŸÜ",
    titlesmol: "ŸÖŸÜÿßÿ≥ÿ® ÿ®ÿ±ÿß€å ÿ®ÿ±ŸÜÿßŸÖŸá‚ÄåŸÜŸà€åÿ≥ÿßŸÜ ",
    titlename: "ŸÖÿ≠ŸÖÿØ ⁄©ÿ±€åŸÖ€å",
    clock: "€≤€∞:€≥€∏:€π",
    pris: "€≥€∏€∞",
  },
  {
    imagsrc: "/product3.png",
    titlebig: "ÿØŸàÿ±Ÿá ÿ∑ÿ±ÿßÿ≠€å UI/UX",
    titlesmol: "ÿ¢ÿ¥ŸÜÿß€å€å ÿ®ÿß ÿ∑ÿ±ÿßÿ≠€å ÿ±ÿßÿ®ÿ∑ ⁄©ÿßÿ±ÿ®ÿ±€å ",
    titlename: "ÿ≥ÿßÿ±ÿß ŸÖÿ≠ŸÖÿØ€å",
    clock: "€≤€∞:€≥€∏:€π",
    pris: "€≥€∏€∞",
  },
  // üëá ÿ®ÿ±ÿß€å ÿ™ÿ≥ÿ™ ÿµŸÅÿ≠Ÿá ÿØŸàŸÖ Ÿà ÿ≥ŸàŸÖ ⁄©Ÿæ€å ⁄©ŸÜ €åÿß ŸÖŸàÿßÿ±ÿØ ÿ¨ÿØ€åÿØ ÿßÿ∂ÿßŸÅŸá ⁄©ŸÜ
  {
    imagsrc: "/product1.png",
    titlebig: "ÿØŸàÿ±Ÿá ÿ¨ÿßŸàÿß ÿßÿ≥⁄©ÿ±€åŸæÿ™ Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá",
    titlesmol: "ÿ®ÿ±ÿß€å ÿ≠ÿ±ŸÅŸá‚Äåÿß€å‚ÄåŸáÿß",
    titlename: "ÿ≠ÿ≥€åŸÜ ÿ±ÿßÿØ",
    clock: "€≤€µ:€≥€∏:€π",
    pris: "€µ€∞€∞",
  },
  {
    imagsrc: "/product2.png",
    titlebig: "ÿØŸàÿ±Ÿá ŸÑÿßÿ±ÿßŸàŸÑ",
    titlesmol: "ÿ™Ÿàÿ≥ÿπŸá Ÿàÿ® Ÿæ€åÿ¥ÿ±ŸÅÿ™Ÿá",
    titlename: "ÿ≤€åŸÜÿ® ÿ±ÿ∂Ÿà€å",
    clock: "€±€µ:€∞€∞:€∞€∞",
    pris: "€≥€π€∞",
  },
  {
    imagsrc: "/product3.png",
    titlebig: "ÿØŸàÿ±Ÿá CSS",
    titlesmol: "ÿ∑ÿ±ÿßÿ≠€å ÿ≠ÿ±ŸÅŸá‚Äåÿß€å ÿµŸÅÿ≠ÿßÿ™ Ÿàÿ®",
    titlename: "ÿ≥Ÿá€åŸÑ ⁄©ÿ±€åŸÖ€å",
    clock: "€±€≤:€¥€∞:€±€∞",
    pris: "€≤€µ€∞",
  },
  {
    imagsrc: "/product2.png",
    titlebig: "ÿØŸàÿ±Ÿá ŸÜ⁄©ÿ≥ÿ™ ÿ¨€å‚Äåÿßÿ≥",
    titlesmol: "SSR Ÿà SSG",
    titlename: "ÿ±€åÿ≠ÿßŸÜŸá ÿµÿßÿØŸÇ€å",
    clock: "€±€∑:€≥€∞:€≤€∞",
    pris: "€¥€∏€∞",
  },
  {
    imagsrc: "/product1.png",
    titlebig: "ÿØŸàÿ±Ÿá ÿßŸÖŸÜ€åÿ™ Ÿàÿ®",
    titlesmol: "SQL Injection Ÿà XSS",
    titlename: "ÿ®ŸáŸÜÿßŸÖ ÿπŸÑ€åŸæŸàÿ±",
    clock: "€±€≥:€≤€µ:€µ€∞",
    pris: "€¥€±€∞",
  },
  {
    imagsrc: "/product1.png",
    titlebig: "ÿØŸàÿ±Ÿá ⁄Øÿ±ÿßŸÅ‚Äå⁄©€åŸàÿßŸÑ",
    titlesmol: "ÿ¢ÿ¥ŸÜÿß€å€å ÿ®ÿß GraphQL",
    titlename: "⁄©€åÿßŸÜÿß ŸÖÿ≠ŸÖÿØ€å",
    clock: "€±€∞:€¥€µ:€∞€∞",
    pris: "€≥€≤€∞",
  },
];

const categories = [
  {
    title: "ÿØÿ≥ÿ™Ÿá ÿ®ŸÜÿØ€å ÿØŸàÿ±Ÿá Ÿáÿß",
    options: ["ŸáŸÖŸá ÿØÿ≥ÿ™Ÿá ÿ®ŸÜÿØ€å Ÿáÿß"],
  },
  {
    title: "Ÿàÿ±ÿØŸæÿ±ÿ≥",
    options: ["ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ÿßŸÅÿ≤ŸàŸÜŸá", "ÿ∑ÿ±ÿßÿ≠€å ŸÇÿßŸÑÿ®"],
  },
  {
    title: "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ŸÖŸàÿ®ÿß€åŸÑ",
    options: ["ÿßŸÜÿØÿ±Ÿà€åÿØ (⁄©ÿßÿ™ŸÑ€åŸÜ)", "ŸÅŸÑÿßÿ™ÿ± Ÿà ÿØÿßÿ±ÿ™", "ÿ±€å‚Äåÿß⁄©ÿ™ ŸÜ€åÿ™€åŸà"],
  },
  {
    title: "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å Ÿàÿ®",
    options: ["ASP.NET", "Ajax", "PHP", "HTML, CSS, JavaScript", "Bootstrap"],
  },
  {
    title: "ÿ≤ÿ®ÿßŸÜ Ÿáÿß€å ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å",
    options: [
      "Ÿæÿß€åÿ™ŸàŸÜ",
      "ÿ≥€å / ÿ≥€å ŸæŸÑÿßÿ≥‚ÄåŸæŸÑÿßÿ≥",
      "ÿ¨ÿßŸàÿß",
      "ÿ¨ÿßŸàÿßÿßÿ≥⁄©ÿ±€åŸæÿ™",
      "⁄ØŸà ŸÑÿßŸÜ⁄Ø",
      "ÿ≥€å ÿ¥ÿßÿ±Ÿæ",
      "Ÿæ€å ÿß⁄Ü Ÿæ€å",
      "ÿ≥Ÿà€åŸÅÿ™",
    ],
  },
  {
    title: "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ŸÖŸàÿ®ÿß€åŸÑ",
    options: [
      "ÿßŸÜÿØÿ±Ÿà€åÿØ (ÿ¨ÿßŸàÿß)",
      "ÿßŸÜÿØÿ±Ÿà€åÿØ (⁄©ÿßÿ™ŸÑ€åŸÜ)",
      "ŸÅŸÑÿßÿ™ÿ± Ÿà ÿØÿßÿ±ÿ™",
      "ÿ±€å‚Äåÿß⁄©ÿ™ ŸÜ€åÿ™€åŸà",
    ],
  },
  {
    title: "Ÿàÿ±ÿØŸæÿ±ÿ≥",
    options: ["ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ÿßŸÅÿ≤ŸàŸÜŸá", "ÿ∑ÿ±ÿßÿ≠€å ŸÇÿßŸÑÿ®"],
  },
  {
    title: "ŸÅÿ±€åŸÖ Ÿàÿ±⁄© Ÿáÿß",
    options: ["ÿ±€å‚Äåÿß⁄©ÿ™", "Ÿà€åŸà ÿ¨€å‚Äåÿßÿ≥", "ÿßŸÜ⁄ØŸàŸÑÿßÿ±", "ŸÑÿßÿ±ÿßŸàŸÑ", "ŸÅŸÑÿ≥⁄©", "ŸÜÿ≥ÿ™‚Äåÿ¨€å‚Äåÿßÿ≥"],
  },
  {
    title: "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ŸÑ€åŸÜŸà⁄©ÿ≥",
    options: [
      "ÿßŸÜÿØÿ±Ÿà€åÿØ (ÿ¨ÿßŸàÿß)",
      "ÿßŸÜÿØÿ±Ÿà€åÿØ (⁄©ÿßÿ™ŸÑ€åŸÜ)",
      "ŸÅŸÑÿßÿ™ÿ± Ÿà ÿØÿßÿ±ÿ™",
      "ÿ±€å‚Äåÿß⁄©ÿ™ ŸÜ€åÿ™€åŸà",
      "ÿ±€å‚Äåÿß⁄©ÿ™ ",
    ],
  },
];

export default function ProducCategories() {
  const [currentPage, setCurrentPage] = useState(1);
  const coursesPerPage = 9;
  const indexOfLastCourse = currentPage * coursesPerPage;
  const indexOfFirstCourse = indexOfLastCourse - coursesPerPage;
  const currentCourses = courses.slice(indexOfFirstCourse, indexOfLastCourse);
  const totalPages = Math.ceil(courses.length / coursesPerPage);

  const nextPage = () => {
    if (currentPage < totalPages) setCurrentPage((prev) => prev + 1);
  };

  const prevPage = () => {
    if (currentPage > 1) setCurrentPage((prev) => prev - 1);
  };

  const [checkedItems, setCheckedItems] = useState({
    "ŸáŸÖŸá ÿØÿ≥ÿ™Ÿá ÿ®ŸÜÿØ€å Ÿáÿß": true,
    Ÿàÿ±ÿØŸæÿ±ÿ≥: true,
    "ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å ÿßŸÅÿ≤ŸàŸÜŸá": true,
    "ÿ∑ÿ±ÿßÿ≠€å ŸÇÿßŸÑÿ®": true,
    "ÿ≤ÿ®ÿßŸÜ Ÿáÿß€å ÿ®ÿ±ŸÜÿßŸÖŸá ŸÜŸà€åÿ≥€å": true,
    Ÿæÿß€åÿ™ŸàŸÜ: true,
    "ŸÅÿ±€åŸÖ Ÿàÿ±⁄© Ÿáÿß": true,
    "ŸÜ⁄©ÿ≥ÿ™ ÿ¨€å‚Äåÿßÿ≥": true,
  });

  const handleChange = (label) => {
    setCheckedItems((prev) => ({
      ...prev,
      [label]: !prev[label],
    }));
  };

  return (
    <section className=" w-full  mt-10 px-2 sm:px-4">
      <div className=" mx-auto    flex flex-col xl:mx-2 xs3:mx-20 lg:flex-row  lg:gap-5">
        {/* Product Grid + Pagination */}

        <main className="flex-1 flex flex-col  ">
          {/* Product Grid */}
          <div
            className="grid justify-center
        grid-cols-1 
        xs2:grid-cols-2 
        md:grid-cols-3 
        lg:grid-cols-3 
        gap-x-2 mx-3 md:mx-0  gap-y-4"
            mt
          >
            {currentCourses.map((course, index) => (
              <div key={index} className="flex justify-center items-center">
                <Productcart {...course} />
              </div>
            ))}
          </div>

          {/* Pagination */}
          <div className="flex justify-center items-center mt-8 gap-3 flex-wrap">
            <button
              onClick={prevPage}
              disabled={currentPage === 1}
              className={`px-4 py-2 rounded-md text-sm ${
                currentPage === 1
                  ? "bg-gray-300 text-gray-600 cursor-not-allowed"
                  : "bg-blue-600 text-white hover:bg-blue-700"
              }`}
            >
              ŸÇÿ®ŸÑ€å
            </button>

            <span className="px-3 py-1.5 text-sm bg-white border rounded-md text-gray-700 shadow">
              ÿµŸÅÿ≠Ÿá {currentPage}
            </span>

            <button
              onClick={nextPage}
              disabled={currentPage === totalPages}
              className={`px-4 py-2 rounded-md text-sm ${
                currentPage === totalPages
                  ? "bg-gray-300 text-gray-600 cursor-not-allowed"
                  : "bg-blue-600 text-white hover:bg-blue-700"
              }`}
            >
              ÿ®ÿπÿØ€å
            </button>
          </div>
        </main>

        {/* Sidebar */}
        <aside className="hidden lg:block w-full lg:w-72 bg-white rounded-xl shadow p-4 border">
          {categories.map((category, idx) => (
            <div key={idx} className="mb-5">
              <p className="text-base font-semibold text-gray-800 mb-2">
                {category.title}
              </p>
              <div className="space-y-2">
                {category.options.map((label) => (
                  <label
                    key={label}
                    className="flex items-center justify-between text-sm text-gray-700"
                  >
                    <span className="pr-2">{label}</span>
                    <input
                      type="checkbox"
                      checked={checkedItems[label] || false}
                      onChange={() => handleChange(label)}
                      className="w-4 h-4 text-blue-600 border-gray-300 rounded"
                    />
                  </label>
                ))}
              </div>
            </div>
          ))}
        </aside>
      </div>
    </section>
  );
}
